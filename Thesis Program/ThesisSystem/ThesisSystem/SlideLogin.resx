<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="highlighter.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="reflectionImage1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>